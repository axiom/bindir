#!/usr/bin/env zsh
# Wrapper for searching through the MPD database, and queing music and such.

NAME=$0

# Display usage information. Bla.
function usage()
{
	cat<<EOS
Usage: $NAME [-q|-a] <search type> <search term>
EOS
}

function help()
{
	cat<<EOS
Example:
	$NAME -q album unknown pleasures

<search type> should be one of:
	artist, album, title, track, name, genre, date,
	composer, performer, comment, disc, filename, any

<search term> should just be a string.
EOS
}

# Cut out interesting parts of the file path. If the function is given a
# second argument it will not show file extensions.
function pretty()
{
	PRE="s/^\(.*\)\/\(.*\)\/\(.*\)\.\(.*\)$/\\"
	SUF=' [\4]/'
	[ $2 ] && SUF='/'
	sed -e $PRE$1$SUF | sort -u
}

# If the function is given any argument it clears the current mpd playlist.
# Then it queues whatever is piped to the function and begin playback.
function queue()
{
	if [ $1 ]; then
		[ $1 -eq 1 ] && mpc clear > /dev/null
		> >(cat) > >(mpc add >/dev/null; mpc play >/dev/null)
	else
		cat
	fi
}

# Handle some parameters.
case $1 in
	-h|--help)  usage; echo; help; exit 0 ;;
	-a|--add)   QUEUE=2; shift ;;
	-q|--queue) QUEUE=1; shift ;;
esac

# Check the number of arguments.
if [ $# -lt 2 ] ; then
	usage 1>&2
	exit 127
fi

# Shift off the first argument so we can use $* later.
WHAT=$1; shift

# grep is used to highlight the search term here, it will not do that by
# default though, you will have to set some environmental variable to do that.
mpc search $WHAT "$*" | queue $QUEUE | \
case $WHAT in
	album)  pretty 2   | grep -i "$*" ;;
	artist) pretty 2   | grep -i "$*" ;;
	genre)  pretty 1 0 | column       ;;
	title)  pretty 3   | grep -i "$*" ;;
	*) pretty 2
esac
